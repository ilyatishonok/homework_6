{"version":3,"sources":["components/Tab/Tab.js","components/Tabs/Tabs.js","components/Article/Article.js","constants/config.js","components/ArticleList/ArticleList.js","components/Loader/Loader.js","components/ArticlesContainer/ArticlesContainer.js","data/tabs.js","components/App/App.js","serviceWorker.js","index.js"],"names":["TabContainer","styled","div","_templateObject","props","selected","Tab","onTabClick","_this$props","_this","onTabChange","id","_this$props2","this","title","react_default","a","createElement","onClick","Component","TabsContainer","Tabs_templateObject","Tabs","activeTab","tabs","map","tab","Tab_Tab","key","ArticleLink","attrs","_ref","urlToImage","style","backgroundImage","concat","Article_templateObject","ArticleContent","_templateObject2","ArticleTitle","h1","_templateObject3","ArticleDescription","_templateObject4","Article","description","url","href","config","source","apiKey","defaultUrlToImage","defaultErrorMessage","ArticleList","articles","article","components_Article_Article","RotatePlane","keyframes","Loader_templateObject","Spinner","Loader_templateObject2","Loader","ContentLayout","ArticlesContainer_templateObject","Error","ArticlesContainer_templateObject2","HighLight","b","ArticlesContainer_templateObject3","ArticlesContainer","state","isFetching","tabId","setState","error","find","page","Math","floor","random","fetch","then","res","json","data","catch","_this$state","components_Loader_Loader","components_ArticleList_ArticleList","Fragment","components_Tabs_Tabs","renderContent","GlobalStyle","createGlobalStyle","App_templateObject","App","ArticlesContainer_ArticlesContainer","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ktBAIA,IAAMA,EAAeC,IAAOC,IAAVC,IAGC,SAAAC,GAAK,OAAIA,EAAMC,SAAW,UAAY,UAuBpCC,6MAQjBC,WAAa,WAAM,IAAAC,EACuBC,EAAKL,MAAnCC,EADOG,EACPH,SAAUK,EADHF,EACGE,YAAaC,EADhBH,EACgBG,GAE1BN,GACDK,EAAYC,4EAIX,IAAAC,EACuBC,KAAKT,MAAzBU,EADHF,EACGE,MAAOT,EADVO,EACUP,SAEf,OACIU,EAAAC,EAAAC,cAACjB,EAAD,CAAcK,SAAUA,EAAUa,QAASL,KAAKN,YAC3CO,UArBgBK,8MCzBjC,IAAMC,EAAgBnB,IAAOC,IAAVmB,KAgCJC,EAxBF,SAAAlB,GAAS,IACVmB,EAAiCnB,EAAjCmB,UAAWC,EAAsBpB,EAAtBoB,KAAMd,EAAgBN,EAAhBM,YAEzB,OACIK,EAAAC,EAAAC,cAACG,EAAD,KACII,EAAKC,IAAI,SAAAC,GAAG,OACRX,EAAAC,EAAAC,cAACU,EAAD,CACIC,IAAKF,EAAIf,GACTA,GAAIe,EAAIf,GACRG,MAAOY,EAAIZ,MACXJ,YAAaA,EACbL,SAAUkB,IAAcG,EAAIf,4rBCpBhD,IAAMkB,EAAc5B,IAAOe,EAAEc,MAAM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,WAAH,MAAqB,CACpDC,MAAO,CACHC,gBAAe,OAAAC,OAASH,EAAT,QAFH/B,CAAHmC,KAcXC,EAAiBpC,IAAOC,IAAVoC,KAWdC,EAAetC,IAAOuC,GAAVC,KAIZC,EAAqBzC,IAAOC,IAAVyC,KAwBTC,EApBC,SAAAxC,GAAS,IACbU,EAAwCV,EAAxCU,MAAOkB,EAAiC5B,EAAjC4B,WAAYa,EAAqBzC,EAArByC,YAAaC,EAAQ1C,EAAR0C,IAExC,OACI/B,EAAAC,EAAAC,cAACY,EAAD,CAAaG,WAAYA,EAAYe,KAAMD,GACvC/B,EAAAC,EAAAC,cAACoB,EAAD,KACItB,EAAAC,EAAAC,cAACsB,EAAD,KAAezB,GACfC,EAAAC,EAAAC,cAACyB,EAAD,KAAqBG,MC5CtBG,EAAA,CACXC,OAAQ,oCACRC,OAAQ,mCACRC,kBAAmB,qHACnBC,oBAAqB,gDCiBVC,EAhBK,SAAAtB,GAChB,OADkCA,EAAfuB,SACH7B,IAAI,SAAA8B,GAAO,OACvBxC,EAAAC,EAAAC,cAACuC,EAAD,CACI5B,IAAK2B,EAAQzC,MACbA,MAAOyC,EAAQzC,MACf+B,YAAaU,EAAQV,YACrBC,IAAKS,EAAQT,IACbd,WAAYuB,EAAQvB,YAAcgB,EAAOG,g2BCTrD,IAAMM,EAAcC,YAAHC,KAaXC,EAAU3D,IAAOC,IAAV2D,IAKYJ,EACRA,GAOFK,EAJA,WACX,OAAO/C,EAAAC,EAAAC,cAAC2C,EAAD,qzBClBX,IAAMG,EAAgB9D,IAAOC,IAAV8D,KA4BbC,EAAQhE,IAAOC,IAAVgE,KAILC,EAAYlE,IAAOmE,EAAVC,KAIMC,6MAKjBC,MAAQ,CACJhD,UAAW,GACX+B,SAAU,GACVkB,YAAY,KAGhB9D,YAAc,SAAA+D,GAAS,IACXjD,EAASf,EAAKL,MAAdoB,KACAyB,EAAwCD,EAAxCC,OAAQC,EAAgCF,EAAhCE,OAAQE,EAAwBJ,EAAxBI,oBAExB3C,EAAKiE,SAAS,CACVnD,UAAWkD,EACXE,OAAO,EACPH,YAAY,IAGhB,IAAM9C,EAAMF,EAAKoD,KAAK,SAAAlD,GAAG,OAAIA,EAAIf,KAAO8D,IAClCI,EAAOC,KAAKC,MAAuB,GAAhBD,KAAKE,SAAiB,GAE/CC,MAAK,GAAA9C,OAAIc,EAAJ,UAAAd,OAAmB0C,EAAnB,YAAA1C,OAAkCe,EAAlC,OAAAf,OAA8CT,EAAIZ,QAClDoE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACF5E,EAAKiE,SAAS,CACVpB,SAAU+B,EAAK/B,SACfkB,YAAY,MAGnBc,MAAM,WACH7E,EAAKiE,SAAS,CACVF,YAAY,EACZG,MAAOvB,sFAKP,IAAAmC,EACuC1E,KAAK0D,MAAhDhD,EADIgE,EACJhE,UAAWiD,EADPe,EACOf,WAAYG,EADnBY,EACmBZ,MAAOrB,EAD1BiC,EAC0BjC,SAEtC,OAAIqB,EACO5D,EAAAC,EAAAC,cAACgD,EAAD,KAAQU,GAGfH,EACOzD,EAAAC,EAAAC,cAACuE,EAAD,MAGNjE,EAQER,EAAAC,EAAAC,cAACwE,EAAD,CAAanC,SAAUA,EAAUkB,WAAYA,IAN5CzD,EAAAC,EAAAC,cAAA,gDACsCF,EAAAC,EAAAC,cAACkD,EAAD,WADtC,wEASH,IACG3C,EAASX,KAAKT,MAAdoB,KACAD,EAAcV,KAAK0D,MAAnBhD,UAER,OACIR,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,SAAP,KACI3E,EAAAC,EAAAC,cAAC0E,EAAD,CAAMpE,UAAWA,EAAWb,YAAaG,KAAKH,YAAac,KAAMA,IACjET,EAAAC,EAAAC,cAAC8C,EAAD,KACKlD,KAAK+E,yBAtEqBzE,aCzBhCK,EAnBF,CACT,CACIb,GAAI,IACJG,MAAO,SAEX,CACIH,GAAI,IACJG,MAAO,UAEX,CACIH,GAAI,IACJG,MAAO,SAEX,CACIH,GAAI,IACJG,MAAO,wdCVf,IAAM+E,EAAcC,YAAHC,KAkCFC,EATH,WACR,OACIjF,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,SAAP,KACI3E,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAACgF,EAAD,CAAezE,KAAMA,MCtBb0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC","file":"static/js/main.906d9bdd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TabContainer = styled.div`\r\n    cursor: pointer;\r\n    width: 25%;\r\n    background: ${ props => props.selected ? '#491253' : 'black'};\r\n    color: white;\r\n    font-family: fantasy;\r\n    font-size: 20px;\r\n    transition: all ease .1s;\r\n    user-select: none;\r\n    text-align: center;\r\n    padding: 15px;\r\n\r\n    &:hover {\r\n        background: #491253;\r\n        border: 0px;\r\n    }\r\n\r\n    @media(max-width: 750px) {\r\n        width: 50%;\r\n    }\r\n    \r\n    @media(max-width: 520px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport default class Tab extends Component {\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        onTabChange: PropTypes.func.isRequired,\r\n        selected: PropTypes.bool.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n    }\r\n\r\n    onTabClick = () => {\r\n        const { selected, onTabChange, id } = this.props;\r\n\r\n        if (!selected) {\r\n            onTabChange(id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { title, selected } = this.props;\r\n\r\n        return (\r\n            <TabContainer selected={selected} onClick={this.onTabClick}>\r\n                {title}\r\n            </TabContainer>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Tab from '../Tab';\r\n\r\nconst TabsContainer = styled.div`\r\n    position: fixed;\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    box-shadow: 0 0 10px black;\r\n`;\r\n\r\nconst Tabs = props => {\r\n    const { activeTab, tabs, onTabChange } = props;\r\n\r\n    return (\r\n        <TabsContainer>\r\n           {tabs.map(tab => (\r\n                <Tab\r\n                    key={tab.id}\r\n                    id={tab.id}\r\n                    title={tab.title}\r\n                    onTabChange={onTabChange}\r\n                    selected={activeTab === tab.id}\r\n                />\r\n            ))} \r\n        </TabsContainer>\r\n    );\r\n}\r\n\r\nTabs.propTypes = {\r\n    tabs: PropTypes.array.isRequired,\r\n    activeTab: PropTypes.string.isRequired,\r\n    onTabChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Tabs;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ArticleLink = styled.a.attrs(({ urlToImage }) => ({\r\n    style: {\r\n        backgroundImage: `url(${urlToImage})`,\r\n    },\r\n}))`\r\n    width: 100%;\r\n    color: white;\r\n    cursor: pointer;\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    text-decoration: none;\r\n`;\r\n\r\nconst ArticleContent = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    min-height: 200px;\r\n    padding: 30px;\r\n    transition: all ease .2s;\r\n\r\n    &:hover {\r\n        background-color: rgba(0,0,0,0.5);\r\n    }\r\n`;\r\n\r\nconst ArticleTitle = styled.h1`\r\n    margin: 0px;\r\n`;\r\n\r\nconst ArticleDescription = styled.div`\r\n    margin: 0px;\r\n`;\r\n\r\nconst Article = props => {\r\n    const { title, urlToImage, description, url } = props;\r\n\r\n    return (\r\n        <ArticleLink urlToImage={urlToImage} href={url}>\r\n            <ArticleContent>\r\n                <ArticleTitle>{title}</ArticleTitle>\r\n                <ArticleDescription>{description}</ArticleDescription>\r\n            </ArticleContent>\r\n        </ArticleLink>\r\n    );\r\n}\r\n\r\nArticle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    urlToImage: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Article;","export default {\r\n    source: 'https://newsapi.org/v2/everything',\r\n    apiKey: 'e3f4198bcce84c8ba6d01cda68933d4f',\r\n    defaultUrlToImage: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/1024px-No_image_available.svg.png',\r\n    defaultErrorMessage: 'Error while fetching data. Please try again!',\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Article from '../Article';\r\nimport config from '../../constants/config';\r\n\r\nconst ArticleList = ({ articles }) => {\r\n    return articles.map(article => ( \r\n        <Article\r\n            key={article.title}\r\n            title={article.title} \r\n            description={article.description}\r\n            url={article.url}\r\n            urlToImage={article.urlToImage || config.defaultUrlToImage}\r\n        />\r\n    ));\r\n}\r\n\r\nArticleList.propTypes = {\r\n    articles: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default ArticleList;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst RotatePlane = keyframes`\r\n    0% { \r\n        transform: perspective(120px) rotateX(0deg) rotateY(0deg);\r\n        -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg) \r\n    } 50% { \r\n        transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);\r\n        -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg) \r\n    } 100% { \r\n        transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\r\n        -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\r\n    }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: black;\r\n    margin: 100px auto;\r\n    -webkit-animation: ${RotatePlane} 1.2s infinite ease-in-out;\r\n    animation: ${RotatePlane} 1.2s infinite ease-in-out;\r\n`;\r\n\r\nconst Loader = () => {\r\n    return <Spinner></Spinner>\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '../Tabs';\r\nimport ArticleList from '../ArticleList';\r\nimport Loader from '../Loader';\r\nimport config from '../../constants/config';\r\n\r\nconst ContentLayout = styled.div`\r\n    margin-left: 200px;\r\n    margin-right: 200px;\r\n    padding-top: 54px;\r\n    box-shadow: 0 0 20px black;\r\n    min-height: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n\r\n    @media(max-width: 1020px) {\r\n        margin-left: 100px;\r\n        margin-right: 100px;\r\n    }\r\n    \r\n    @media(max-width: 750px) {\r\n        margin-left: 50px;\r\n        margin-right: 50px;\r\n        padding-top: 108px;\r\n    }\r\n    \r\n    @media(max-width: 520px) {\r\n        margin: 0px;\r\n        padding-top: 216px;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    color:red;\r\n`;\r\n\r\nconst HighLight = styled.b`\r\n    color: #491253;\r\n`;\r\n\r\nexport default class ArticlesContainer extends Component {\r\n    static propTypes = {\r\n        tabs: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        activeTab: '',\r\n        articles: [],\r\n        isFetching: false,\r\n    }\r\n\r\n    onTabChange = tabId => {\r\n        const { tabs } = this.props;\r\n        const { source, apiKey, defaultErrorMessage } = config;\r\n\r\n        this.setState({\r\n            activeTab: tabId,\r\n            error: false,\r\n            isFetching: true,\r\n        });\r\n\r\n        const tab = tabs.find(tab => tab.id === tabId);\r\n        const page = Math.floor((Math.random() * 50) + 1);\r\n\r\n        fetch(`${source}?page=${page}&apiKey=${apiKey}&q=${tab.title}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    articles: data.articles,\r\n                    isFetching: false,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    isFetching: false,\r\n                    error: defaultErrorMessage,\r\n                })\r\n            })\r\n    }\r\n\r\n    renderContent() {\r\n        const { activeTab, isFetching, error, articles } = this.state;\r\n\r\n        if (error) {\r\n            return <Error>{error}</Error>;\r\n        }\r\n\r\n        if (isFetching) {\r\n            return <Loader />\r\n        }\r\n\r\n        if (!activeTab) {\r\n            return (\r\n                <div>\r\n                    Please, select any Tab to display <HighLight>20</HighLight> random articles of chosen category\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <ArticleList articles={articles} isFetching={isFetching} />\r\n    }\r\n\r\n    render() {\r\n        const { tabs } = this.props;\r\n        const { activeTab } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Tabs activeTab={activeTab} onTabChange={this.onTabChange} tabs={tabs} />\r\n                <ContentLayout>\r\n                    {this.renderContent()}\r\n                </ContentLayout>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","const tabs = [\r\n    {\r\n        id: '0',\r\n        title: 'World',\r\n    },\r\n    {\r\n        id: '1',\r\n        title: 'People',\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Sport',\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'Games',\r\n    },\r\n];\r\n\r\nexport default tabs;","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport NewsContainer from '../ArticlesContainer';\r\nimport tabs from '../../data/tabs';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html {\r\n        height: 100%;\r\n    }\r\n\r\n    body {\r\n        min-height: 100%;\r\n        margin: 0px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-wrap: nowrap;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        font-family: fantasy;\r\n    }\r\n\r\n    #root {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <GlobalStyle />\r\n            <NewsContainer tabs={tabs} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}